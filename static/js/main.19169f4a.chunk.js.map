{"version":3,"sources":["components/Addcar.js","components/CarList.js","App.js","serviceWorker.js","index.js"],"names":["Addcar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","saveCar","car","brand","state","model","color","year","fuel","price","addModal","current","hide","React","createRef","_this2","react_default","a","createElement","Button_default","style","margin","variant","onClick","show","Add_default","lib_default","dialogStyles","width","height","marginLeft","hideOnOverlayClicked","ref","title","TextField_default","placeholder","onChange","Save_default","Component","Carlist","params","updateCar","link","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","showSnack","msg","listCars","renderEditable","cellInfo","backgroundColor","contentEditable","suppressContentEditableWarning","onBlur","e","data","toConsumableArray","cars","index","column","id","innerHTML","dangerouslySetInnerHTML","__html","handleClose","deleteCar","catch","err","console","error","json","responseData","_embedded","_this3","columns","Header","accessor","Cell","filterable","sortable","_ref","row","size","Delete_default","components_Addcar","es","defaultPageSize","Snackbar_default","autoHideDuration","open","onClose","TransitionComponent","Fade","message","allow","src","App","className","CarList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19169f4a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport SkyLight from 'react-skylight';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TextField from '@material-ui/core/TextField';\r\n \r\n\r\nclass Addcar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {brand:'', model:'', color:'', year:'', fuel:'', price:''}\r\n        this.addModal = React.createRef();\r\n    }\r\n\r\n    handleChange =(event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    saveCar =() => {\r\n        const car = {brand: this.state.brand, model: this.state.model, color: this.state.color, \r\n        year: this.state.year, fuel: this.state.fuel, price:this.state.price};\r\n        this.props.saveCar(car);\r\n        this.setState({brand: '', model:'', color:'', year:'', fuel:'', price:''});\r\n        this.addModal.current.hide();\r\n    }\r\n\r\n    render() {\r\n        const addDialog ={\r\n            width: '20%',\r\n            height: '300px',\r\n            marginLeft: '-10%',\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Button style={{margin: 10}} variant=\"contained\" color=\"primary\" onClick={() => this.addModal.current.show()}>New Car <AddIcon /></Button>\r\n                <SkyLight dialogStyles={addDialog} hideOnOverlayClicked ref={this.addModal} title=\"New Car\">\r\n                <TextField placeholder=\"brand\" name=\"brand\" onChange={this.handleChange} value={this.state.brand} /> <br />\r\n                <TextField placeholder=\"model\" name=\"model\" onChange={this.handleChange} value={this.state.model} /> <br />              \r\n                <TextField placeholder=\"color\" name=\"color\" onChange={this.handleChange} value={this.state.color} /> <br />              \r\n                <TextField placeholder=\"year\" name=\"year\" onChange={this.handleChange} value={this.state.year} />   <br />            \r\n                <TextField placeholder=\"fuel\" name=\"fuel\" onChange={this.handleChange} value={this.state.fuel} /> <br />              \r\n                <TextField placeholder=\"price\" name=\"price\" onChange={this.handleChange} value={this.state.price} />  <br /> \r\n                <Button style={{margin:10}} variant =\"contained\" color=\"primary\"  onClick={this.saveCar}>Save Car<SaveIcon /></Button>            \r\n                </SkyLight>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Addcar;","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Addcar from './Addcar.js';\r\n\r\nclass Carlist extends Component {\r\n\r\n    constructor(params) {\r\n        super(params);\r\n        this.state = { cars: [], showSnack: false, msg: '' };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.listCars();\r\n    }\r\n\r\n    updateCar = (car, link) => {\r\n        fetch(link,\r\n            {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(car)\r\n            })\r\n            .then(response => {\r\n                this.setState({ showSnack: true, msg: 'Car Saved' })\r\n                this.listCars();\r\n            })\r\n    }\r\n    renderEditable = (cellInfo) => {\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                    const data = [...this.state.cars];\r\n                    data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                    this.setState({ cars: data });\r\n                }}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: this.state.cars[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ showSnack: false });\r\n    };\r\n\r\n    listCars() {\r\n        fetch('https://carstockrest.herokuapp.com/cars')\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                this.setState({ cars: responseData._embedded.cars })\r\n            })\r\n    }\r\n\r\n    deleteCar = (link) => {\r\n        fetch(link, { method: 'DELETE' })\r\n            .then(response => {\r\n                this.listCars();\r\n                this.setState({ showSnack: true, msg: 'Car Deleted' });\r\n            })\r\n    }\r\n\r\n    saveCar = (car) => {\r\n        fetch('https://carstockrest.herokuapp.com/cars',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(car)\r\n            })\r\n            .then(response => {\r\n\r\n                this.listCars();\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                this.setState({ showSnack: true, msg: 'Error in Saving' })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const columns = [{\r\n            Header: 'Brand',\r\n            accessor: 'brand',\r\n            Cell: this.renderEditable\r\n        }, {\r\n            Header: 'Model',\r\n            accessor: 'model',\r\n            Cell: this.renderEditable\r\n\r\n        }, {\r\n            Header: 'Year',\r\n            accessor: 'year',\r\n            Cell: this.renderEditable\r\n\r\n        }, {\r\n            Header: 'Color',\r\n            accessor: 'color',\r\n            Cell: this.renderEditable\r\n\r\n        }, {\r\n            Header: 'Fuel',\r\n            accessor: 'fuel',\r\n            Cell: this.renderEditable\r\n\r\n        }, {\r\n            Header: 'Price €',\r\n            accessor: 'price',\r\n            Cell: this.renderEditable\r\n\r\n        }, {\r\n            Header: '',\r\n            accessor: '_links.self.href',\r\n            filterable: false,\r\n            sortable: false,\r\n            Cell: ({ row, value }) => (\r\n                <div><Button size=\"small\" color=\"default\" onClick={() => this.updateCar(row, value)}><SaveIcon /></Button><Button size=\"small\" color=\"default\" onClick={() => this.deleteCar(value)}><DeleteIcon /></Button>\r\n                </div>\r\n            ),\r\n\r\n        },\r\n        ]\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Addcar saveCar={this.saveCar} />\r\n                <ReactTable\r\n                    filterable={true}\r\n                    defaultPageSize={10}\r\n                    data={this.state.cars}\r\n                    columns={columns}\r\n                />\r\n                <Snackbar\r\n                    autoHideDuration={3000}\r\n                    open={this.state.showSnack}\r\n                    onClose={this.handleClose}\r\n                    TransitionComponent={Fade}\r\n                    message={this.state.msg}\r\n                />\r\n                <iframe allow=\"microphone;\" width=\"350\" height=\"430\"\r\n                    src=\"https://console.dialogflow.com/api-client/demo/embedded/e16f9528-4472-49e1-8a8f-1e912a5f8a94\">\r\n                </iframe>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Carlist;","import React, { Component } from 'react';\nimport './App.css';\nimport Carlist from './components/CarList';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h2>Car Shop</h2>\n        </header>\n        <Carlist />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}